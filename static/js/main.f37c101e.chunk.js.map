{"version":3,"sources":["components/Contacts/contacts.module.css","container.module.css","components/Filter/filter.module.css","redux/phonebook-actions.js","service/contacts-api.js","redux/phonebook-operations.js","redux/phonebook-selectors.js","components/Form/Form.js","components/Contacts/Contacts.js","components/Filter/Filter.js","App.js","redux/phonebook-reducer.js","redux/store.js","index.js","components/Form/form.module.css"],"names":["module","exports","actions","addContact","createAction","payload","id","name","number","deleteContact","changeFilter","fetchContacts","a","axios","get","data","postContacts","contact","post","deleteContacts","contactId","delete","defaults","baseURL","createAsyncThunk","contactsAPI","contacts","console","log","getContacts","state","getFilter","filter","Form","option","useState","setName","setNumber","dispatch","useDispatch","inputId","uuidv4","handleChange","evt","currentTarget","value","onSubmit","preventDefault","newContact","contactActions","contactsOperations","autoComplete","className","styles","phoneBookForm","htmlFor","formLabel","formInput","type","placeholder","onChange","pattern","title","required","formBtn","Contacts","useSelector","contactsSelectors","items","list","filteredContacts","useEffect","map","listItem","contactName","contactBtn","onClick","normalizedFilter","toLowerCase","includes","Filter","filterLabel","filterInput","e","App","container","contactList","createReducer","fulfilled","_","action","isLoading","pending","rejected","error","combineReducers","store","configureStore","reducer","contactsReducer","middlware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,uBAAuB,SAAW,2BAA2B,YAAc,8BAA8B,WAAa,+B,mBCA/ID,EAAOC,QAAU,CAAC,UAAY,6BAA6B,YAAc,iC,mBCAzED,EAAOC,QAAU,CAAC,YAAc,4BAA4B,YAAc,8B,mXCmB3DC,EANC,CACZC,WAbeC,YAAa,gBAAgB,kBAA2B,CACvEC,QAAS,CACLC,GAFwC,EAAGA,GAG3CC,KAHwC,EAAOA,KAI/CC,OAJwC,EAAaA,YAczDC,cANkBL,YAAa,mBAO/BM,aALiBN,YAAa,0B,wCCR3B,SAAeO,IAAtB,+B,4CAAO,8BAAAC,EAAA,sEACoBC,IAAMC,IAAI,aAD9B,uBACKC,EADL,EACKA,KADL,kBAEIA,GAFJ,4C,sBAKA,SAAeC,EAAtB,kC,4CAAO,WAA4BC,GAA5B,iBAAAL,EAAA,sEACoBC,IAAMK,KAAK,YAAaD,GAD5C,uBACKF,EADL,EACKA,KADL,kBAEIA,GAFJ,4C,sBAKA,SAAeI,EAAtB,kC,4CAAO,WAA8BC,GAA9B,iBAAAR,EAAA,sEACoBC,IAAMQ,OAAN,oBAA0BD,IAD9C,uBACKL,EADL,EACKA,KADL,kBAEIA,GAFJ,4C,sBAZPF,IAAMS,SAASC,QAAU,wBCClB,IAAMZ,EAAgBa,YACzB,qBADyC,sBAEzC,4BAAAZ,EAAA,sEAC2Ba,IAD3B,cACUC,EADV,yBAEWA,GAFX,4CAKSV,EAAeQ,YACxB,oBADwC,uCAExC,WAAMP,GAAN,eAAAL,EAAA,+EAE2Ba,EAAyBR,GAFpD,cAEcF,EAFd,yBAGeA,GAHf,gCAKQY,QAAQC,IAAR,MALR,yDAFwC,uDAW/BT,EAAiBK,YAC1B,sBAD0C,uCAE1C,WAAMJ,GAAN,eAAAR,EAAA,+EAE2Ba,EAA2BL,GAFtD,cAEcL,EAFd,yBAGeA,GAHf,gCAKQY,QAAQC,IAAR,MALR,yDAF0C,uDCrBjCC,EAAc,SAAAC,GAAK,OAAIA,EAAMJ,UAE7BK,EAAY,SAAAD,GAAK,OAAIA,EAAMJ,SAASM,Q,+BCKlC,SAASC,EAAT,GAA2B,IAAXC,EAAU,EAAVA,OAC3B,EAAwBC,mBAAS,IAAjC,mBAAO5B,EAAP,KAAa6B,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAO3B,EAAP,KAAe6B,EAAf,KACMC,EAAWC,cAEXC,EAAUC,cAcVC,EAAe,SAAAC,GACjB,MAAwBA,EAAIC,cAApBrC,EAAR,EAAQA,KAAMsC,EAAd,EAAcA,MAEd,OAAQtC,GACJ,IAAK,OACD6B,EAAQS,GACR,MAEJ,IAAK,SACDR,EAAUQ,GACV,MAEJ,QACI,SAIZ,OACI,qCACA,6BAAKX,IAEL,uBAAMY,SAjCW,SAAAH,GACjBA,EAAII,iBACJ,IACMC,EAAa,CAAE1C,GADVmC,cACclC,OAAMC,UAE/B8B,EAASW,EAAe9C,WAAW6C,IACnCV,EAASY,EAAmBlC,aAAagC,IAEzCZ,EAAQ,IACRC,EAAU,KAwBqBc,aAAa,MAAMC,UAAWC,IAAOC,cAApE,UACI,uBAAOC,QAASf,EAASY,UAAWC,IAAOG,UAA3C,kBACI,uBACIJ,UAAWC,IAAOI,UAClBC,KAAK,OACLnD,KAAK,OACLoD,YAAY,kBACZrD,GAAIkC,EACJK,MAAOtC,EACPqD,SAAUlB,EACVmB,QAAQ,yHACRC,MAAM,wJACNC,UAAQ,IAEhB,uBAAOR,QAASf,EAASY,UAAWC,IAAOG,UAA3C,oBACI,uBACIJ,UAAWC,IAAOI,UAClBC,KAAK,MACLnD,KAAK,SACLoD,YAAY,eACZrD,GAAIkC,EACJK,MAAOrC,EACPoD,SAAUlB,EACVmB,QAAQ,yFACRC,MAAM,yFACNC,UAAQ,IAGlB,wBAAQL,KAAK,SAASN,UAAWC,IAAOW,QAAxC,+B,qBCrEK,SAASC,IACpB,IAAM3B,EAAWC,cACjB,EAA0B2B,YAAYC,EAAkBtC,aAAhDuC,EAAR,EAAQA,MAAOpC,EAAf,EAAeA,OACTqC,EAAOC,EAAiBF,EAAOpC,GAQrC,OANAL,QAAQC,IAAIwC,GAEZG,qBAAU,WACNjC,EAASY,EAAmBvC,mBAC7B,CAAC2B,IAGA,mCACI,oBAAIc,UAAWC,IAAOgB,KAAtB,SACKA,EAAKG,KAAI,gBAAGhE,EAAH,EAAGA,OAAQD,EAAX,EAAWA,KAAMD,EAAjB,EAAiBA,GAAjB,OACN,qBAAiB8C,UAAWC,IAAOoB,SAAnC,UACI,oBAAGrB,UAAWC,IAAOqB,YAArB,UAAmCnE,EAAnC,KAA2CC,KAC3C,wBACI4C,UAAWC,IAAOsB,WAClBC,QAAS,WACLtC,EAASY,EAAmB/B,eAAeb,IAC3CgC,EAASpC,EAAQO,cAAcD,KAJvC,sBAFKA,UAiB7B,IAAM8D,EAAmB,SAAC5C,EAAUM,GAChC,IAAM6C,EAAmB7C,EAAO8C,cAEhC,OAAOpD,EAASM,QAAO,qBAAGzB,KACjBuE,cAAcC,SAASF,O,iBCpCrB,SAASG,IACpB,IAAMnC,EAAQqB,YAAYC,EAAkBpC,WACtCO,EAAWC,cAEjB,OACI,wBAAOgB,QAAQ,SAASH,UAAWC,IAAO4B,YAA1C,kCACI,uBACI7B,UAAWC,IAAO6B,YAClBxB,KAAK,OACLb,MAAOA,EACPe,SAAU,SAACuB,GAAD,OAAO7C,EAASpC,EAAQQ,aAAayE,EAAEvC,cAAcC,SAC/DvC,GAAG,cCXJ,SAAS8E,IACtB,OACE,sBAAKhC,UAAWC,IAAOgC,UAAvB,UACE,cAACpD,EAAD,CAAMC,OAAO,cAEb,oBAAIkB,UAAWC,IAAOiC,YAAtB,sBAEA,cAACN,EAAD,IACA,cAACf,EAAD,O,yDCTAG,EAAQmB,YAAc,IAAD,mBACtBrF,EAAQC,YAAa,SAAC2B,EAAD,OAAUzB,EAAV,EAAUA,QAAV,4BAA4ByB,GAA5B,CAAmCzB,OADlC,cAEtBH,EAAQO,eAAgB,SAACqB,EAAD,OAAUzB,EAAV,EAAUA,QAAV,OACrByB,EAAME,QAAO,qBAAGxB,SAAwBH,QAHrB,cAItBM,EAAc6E,WAAY,SAACC,EAAGC,GAAJ,OAAeA,EAAOrF,WAJ1B,IAOrB2B,GAASuD,YAAc,GAAD,eACvBrF,EAAQQ,cAAe,SAAC+E,EAAD,YAAMpF,YAG5BsF,GAAYJ,aAAc,GAAD,mBAC1B5E,EAAciF,SAAU,kBAAM,KADJ,cAE1BjF,EAAc6E,WAAY,kBAAM,KAFN,cAG1B7E,EAAckF,UAAW,kBAAM,KAHL,IAMzBC,GAAQP,YAAc,MAAD,mBACtB5E,EAAckF,UAAW,SAACJ,EAAGC,GAAJ,OAAeA,EAAOrF,WADzB,cAEtBM,EAAciF,SAAU,kBAAM,QAFR,IAKZG,eAAgB,CAC3B3B,QACApC,UACA2D,aACAG,WCLWE,GARDC,YAAe,CACzBC,QAAS,CACLxE,SAAUyE,IAEdC,UAVc,SAACC,GAAD,OAA0BA,EAAqB,CAC7DC,kBAAmB,CACfC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,QAE/DC,OAAOC,MAONC,UAAUC,I,MCddC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUpB,MAAOA,GAAjB,SACI,cAACZ,EAAD,QAGNiC,SAASC,eAAe,U,kBCd1BtH,EAAOC,QAAU,CAAC,cAAgB,4BAA4B,UAAY,wBAAwB,UAAY,wBAAwB,QAAU,yB","file":"static/js/main.f37c101e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contacts_list__3wcae\",\"listItem\":\"contacts_listItem__2mucc\",\"contactName\":\"contacts_contactName__3H0Ot\",\"contactBtn\":\"contacts_contactBtn__Lf-9-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__3gKmY\",\"contactList\":\"container_contactList__2LHSN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"filter_filterLabel__1hYoT\",\"filterInput\":\"filter_filterInput__KcP-x\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contacts/add', ({ id, name, number }) => ({\n    payload: {\n        id,\n        name,\n        number,\n    },\n}));\n\nconst deleteContact = createAction('contacts/delete');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nconst actions = {\n    addContact,\n    deleteContact,\n    changeFilter,\n};\n\nexport default actions;","import axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:4004';\n\nexport async function fetchContacts() {\n    const { data } = await axios.get('/contacts');\n    return data;\n}\n\nexport async function postContacts(contact) {\n    const { data } = await axios.post('/contacts', contact);\n    return data;\n}\n\nexport async function deleteContacts(contactId) {\n    const { data } = await axios.delete(`/contacts/${contactId}`);\n    return data;\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as contactsAPI from '../service/contacts-api';\n\nexport const fetchContacts = createAsyncThunk(\n    'user/fetchContacts',\n    async () => {\n        const contacts = await contactsAPI.fetchContacts();\n        return contacts;\n});\n\nexport const postContacts = createAsyncThunk(\n    'user/postContacts',\n    async contact => {\n        try {\n            const data = await contactsAPI.postContacts(contact);\n            return data;\n        } catch (error) {\n            console.log(error);\n        }      \n});\n\nexport const deleteContacts = createAsyncThunk(\n    'user/deleteContacts',\n    async contactId => {\n        try {\n            const data = await contactsAPI.deleteContacts(contactId);\n            return data;\n        } catch (error) {\n            console.log(error);\n        }      \n});","export const getContacts = state => state.contacts;\n\nexport const getFilter = state => state.contacts.filter;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux'\nimport contactActions from '../../redux/phonebook-actions';\nimport { contactsOperations } from '../../redux';\nimport styles from './form.module.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default function Form({ option }) {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const dispatch = useDispatch();\n\n    const inputId = uuidv4();\n\n    const handleSubmit = evt => {\n        evt.preventDefault();\n        const id = uuidv4();\n        const newContact = { id, name, number };\n\n        dispatch(contactActions.addContact(newContact));\n        dispatch(contactsOperations.postContacts(newContact));\n\n        setName('');\n        setNumber('');      \n    }\n\n    const handleChange = evt => {\n        const { name, value } = evt.currentTarget;\n\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            \n            case 'number':\n                setNumber(value);\n                break;\n            \n            default:\n                return;\n        }\n    }\n\n    return (\n        <>\n        <h1>{option}</h1>\n        \n        <form onSubmit={handleSubmit}  autoComplete=\"off\" className={styles.phoneBookForm}>\n            <label htmlFor={inputId} className={styles.formLabel}>Name</label>\n                <input\n                    className={styles.formInput}\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Enter full name\"\n                    id={inputId}\n                    value={name}\n                    onChange={handleChange}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"The name can only consist of letters, apostrophes, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan etc.\"\n                    required\n                />\n            <label htmlFor={inputId} className={styles.formLabel}>Number</label>\n                <input\n                    className={styles.formInput}\n                    type=\"tel\"\n                    name=\"number\"\n                    placeholder=\"Enter number\"\n                    id={inputId}\n                    value={number}\n                    onChange={handleChange}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"The phone number must be digits and can contain spaces, dashes and should start with +\"\n                    required\n                />\n            \n          <button type=\"submit\" className={styles.formBtn}>Add contact</button>          \n        </form>\n        </>\n    );    \n};\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { contactsOperations, contactsSelectors } from '../../redux';\nimport actions from '../../redux/phonebook-actions';\nimport styles from './contacts.module.css'\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n    const { items, filter } = useSelector(contactsSelectors.getContacts);\n    const list = filteredContacts(items, filter);\n\n    console.log(items);\n\n    useEffect(() => {\n        dispatch(contactsOperations.fetchContacts())\n    }, [dispatch]);\n\n    return (\n        <>\n            <ul className={styles.list}>\n                {list.map(({ number, name, id }) => (\n                    <li key={number} className={styles.listItem}>\n                        <p className={styles.contactName}>{name}: {number}</p>\n                        <button\n                            className={styles.contactBtn}\n                            onClick={() => {\n                                dispatch(contactsOperations.deleteContacts(id));\n                                dispatch(actions.deleteContact(number));                                \n                            }}\n                        >Delete\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </>\n    )\n};\n\nconst filteredContacts = (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    \n    return contacts.filter(({ name }) =>\n        name.toLowerCase().includes(normalizedFilter));    \n};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsSelectors } from '../../redux';\nimport actions from '../../redux/phonebook-actions';\nimport styles from './filter.module.css'\n\nexport default function Filter() {\n    const value = useSelector(contactsSelectors.getFilter);\n    const dispatch = useDispatch();\n\n    return (\n        <label htmlFor=\"filter\" className={styles.filterLabel}>Find contacts by name\n            <input\n                className={styles.filterInput}\n                type=\"text\"\n                value={value}\n                onChange={(e) => dispatch(actions.changeFilter(e.currentTarget.value))}\n                id=\"filter\"\n            />\n        </label>\n    )\n};\n","import styles from './container.module.css'\n\nimport Form from './components/Form/Form';\nimport Contacts from './components/Contacts/Contacts';\nimport Filter from './components/Filter/Filter';\n\nexport default function App() {\n  return (\n    <div className={styles.container}>\n      <Form option=\"Phonebook\"/>\n    \n      <h2 className={styles.contactList}>Contacts</h2>\n    \n      <Filter/>    \n      <Contacts/>\n    </div>\n  );\n}","import { combineReducers } from \"redux\";\nimport { createReducer } from '@reduxjs/toolkit';\nimport { fetchContacts } from './phonebook-operations';\nimport actions from './phonebook-actions';\n\nconst items = createReducer([], {\n    [actions.addContact]: (state, { payload }) => [...state, payload],\n    [actions.deleteContact]: (state, { payload }) =>\n        state.filter(({ number }) => number !== payload),\n    [fetchContacts.fulfilled]: (_, action) => action.payload,\n})\n\nconst filter = createReducer('', {\n    [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst isLoading = createReducer(false, {\n    [fetchContacts.pending]: () => true,\n    [fetchContacts.fulfilled]: () => true,\n    [fetchContacts.rejected]: () => true,\n})\n\nconst error = createReducer(null, {\n    [fetchContacts.rejected]: (_, action) => action.payload,\n    [fetchContacts.pending]: () => null,\n})\n\nexport default combineReducers({\n    items,\n    filter,\n    isLoading,\n    error,\n})","import { configureStore } from \"@reduxjs/toolkit\";\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER\n} from \"redux-persist\";\nimport logger from 'redux-logger';\nimport contactsReducer from './phonebook-reducer';\n\nconst middlware = (getDefaultMiddleware) => getDefaultMiddleware({\n    serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n}).concat(logger);\n\nconst store = configureStore({\n    reducer: {\n        contacts: contactsReducer,\n    },\n    middlware,\n    devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n\nimport 'modern-normalize/modern-normalize.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>          \n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneBookForm\":\"form_phoneBookForm__2zgVQ\",\"formLabel\":\"form_formLabel__1_eLj\",\"formInput\":\"form_formInput__3uoAJ\",\"formBtn\":\"form_formBtn__3NqgR\"};"],"sourceRoot":""}